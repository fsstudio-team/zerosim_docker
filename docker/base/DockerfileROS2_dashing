FROM zerosim_ros

ENV ROS2_DISTO=dashing

##################################################################
# ROS 2 Dashing Install
# https://docs.ros.org/en/dashing/Installation/Ubuntu-Install-Debians.html
##################################################################
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

RUN apt update && apt install -y gnupg2 lsb-release && rm -rf /var/lib/apt/lists/*
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt update
RUN DEBIAN_FRONTEND=noninteractive apt install -y ros-$ROS_DISTRO-desktop && rm -rf /var/lib/apt/lists/*
RUN source /opt/ros/$ROS_DISTRO/setup.bash

RUN apt-get update
RUN apt install -y python3-pip && rm -rf /var/lib/apt/lists/*
RUN pip3 install -U argcomplete

RUN apt update
RUN apt install python3-colcon-common-extensions python3-colcon-core -y && rm -rf /var/lib/apt/lists/*

##################################################################
# ROS2 Workspace
##################################################################
ENV CATKIN_WS_ROS2=/catkin_ws_ros2
RUN mkdir -p $CATKIN_WS_ROS2/src
WORKDIR $CATKIN_WS_ROS2/src
RUN git clone -b $ROS_DISTRO-devel https://github.com/ipa-hsd/action_bridge 
# the crystal-devel branch of control_msgs works for dashing-devel as well
RUN git clone -b crystal-devel https://github.com/ros-controls/control_msgs
WORKDIR $CATKIN_WS_ROS2
RUN rosdep install --from-paths src --ignore-src --rosdistro=$ROS_DISTRO -y
RUN . /opt/ros/melodic/setup.bash && \
    /opt/ros/$ROS_DISTRO/setup.sh && \
    colcon build